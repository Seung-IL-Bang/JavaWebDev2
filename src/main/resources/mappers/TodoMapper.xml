<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.webdev.spring.mapper.TodoMapper">
    <select id="getTime" resultType="string">
        select now() <!-- sql 작성 시 ; 붙이지 않는 것에 주의 -->
    </select>

    <insert id="insert"> <!-- #{파라미터명}: VO의 변수명하고 동일해야 한다. -->
        insert into todo (title, dueDate, writer) values (#{title}, #{dueDate}, #{writer})
    </insert>

    <select id="selectAll" resultType="com.webdev.spring.domain.TodoVO">
        select *
        from todo
        order by tno desc
    </select>

    <select id="selectOne" resultType="com.webdev.spring.domain.TodoVO">
        select *
        from todo
        where tno = #{tno}
    </select>

    <delete id="delete">
        delete
        from todo
        where tno = #{tno}
    </delete>

    <update id="update">
        update todo
        set title    = #{title},
            dueDate  = #{dueDate},
            finished = #{finished}
        where tno = #{tno}
    </update>

    <select id="selectList" resultType="com.webdev.spring.domain.TodoVO">
        select * from todo
        <include refid="search"/> <!-- 동적 쿼리 참조 -->
        order by tno desc limit #{skip}, #{size}
    </select>

    <select id="getCount" resultType="int">
        select count(tno) from todo
        <include refid="search"/>
    </select>

    <sql id="search"> <!-- 동적 쿼리 분리 -->
        <where>
            <if test="types != null and types.length > 0">
                <foreach collection="types" item="type" open="(" close=")" separator=" OR ">
                    <if test="type == 't'.toString()">
                        title like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type == 'w'.toString()">
                        writer like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>

            <if test="finished">
                <trim prefix="and">
                    finished = 1
                </trim>
            </if>

            <if test="from != null and to != null">
                <trim prefix="and">
                    dueDate between #{from} and #{to}
                </trim>
            </if>
        </where>
    </sql>
</mapper>